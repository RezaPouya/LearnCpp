Order of review:

1- HelloCpp 
2- Raw Pointers 
3- References 
4- Statics 
5- Classes 
6- Inheritance ( inheritance , virtual functions - virtual/override/final)
7- interfaces ( pure virtual functions )
8- arrays ( raw arrays )
9- strings
10- const ( const , mutable and basic lambda )
11- instantiate ( new , delete , malloc )
12- operator-overloading
13- This
14- ObjectLifeTime
15- SmartPointer
16- Copy
17- Arrow functions 
18- Vector ( Dynamic Array )
19- Static Linking 
20- Dynamic Linking ( need more study)
21- Game/GameEngineLib ( using libraries)
22- ReturnMultipleItemFromFunctions( Tuple , Pair)
23- FunctionPointer( Function Pointer and Lambdas)




$(SolutionDir)bin\$(Platform)\$(Configuration)\
$(SolutionDir)bin\intermediates\$(Platform)\$(Configuration)\


alternative 
$(SolutionDir)bin\$(ProjectName)\$(Platform)\$(Configuration)\
$(SolutionDir)bin\$(ProjectName)\$(Platform)\intermediates\$(Configuration)\

=========================================
static linking 

-- C/c++ -> General -> Additional Include Directories:
$(SolutionDir)dependencies\include\


-- Linker -> General  --> Additional Library Directories 
$(SolutionDir)dependencies\dlls

-- Linker -> General  --> Additional Dependencies  ( add these ) 
glfw3.lib;glfw3_ml.lib;



=============================================
dynamic linking

-- C/C++ -> General -> Additional Include Directories:
$(SolutionDir)dependencies\include\


-- Linker -> General  --> Additional Library Directories 
$(SolutionDir)dependencies\dlls


-- Linker -> General  --> Additional Dependencies  ( add these )  
glfw3dll.lib;


-- C/C++ -> PreProcessor -> 
GLFW_DLL